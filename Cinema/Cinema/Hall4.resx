<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>