<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>