<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CygfQAAAAABJRU5ErkJggg==
</value>
  </data>
</root>